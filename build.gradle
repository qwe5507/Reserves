buildscript {
	ext {
		springBootVersion = '2.7.6'
		dependencyManagementVersion = '1.0.15.RELEASE'

		// for QueryDSL
		queryDslVersion = '5.0.0'
		querydslPluginVersion = '1.0.10'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		dependencies {
			classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
			classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"

			// for QueryDSL
			classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}"
		}
	}
}


plugins {
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.giyong'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'

	// for QueryDSL
	implementation "com.querydsl:querydsl-core:${queryDslVersion}"
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

//	implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter-storage', version: '1.2.8.RELEASE'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def queryDslDir = 'src/main/generated'

sourceSets {
	main.java.srcDirs += [queryDslDir]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(queryDslDir)
}

clean.doLast {
	file(queryDslDir).deleteDir()
}
